package Core.ISA.RV32I

import chisel3.util.BitPat

object InstR {
  // use rs2 and rs1
  //                          |-func7-|-rs2-|-rs1-|func3|--rd-|-opcode-|
  val ADD : BitPat =  BitPat("b0000000_?????_?????__000__?????_0110011")
  val SUB : BitPat =  BitPat("b0100000_?????_?????__000__?????_0110011")
  val SLL : BitPat =  BitPat("b0000000_?????_?????__001__?????_0110011")
  val SLT : BitPat =  BitPat("b0000000_?????_?????__010__?????_0110011")
  val SLTU: BitPat =  BitPat("b0000000_?????_?????__011__?????_0110011")
  val XOR : BitPat =  BitPat("b0000000_?????_?????__100__?????_0110011")
  val SRL : BitPat =  BitPat("b0000000_?????_?????__101__?????_0110011")
  val SRA : BitPat =  BitPat("b0100000_?????_?????__101__?????_0110011")
  val OR  : BitPat =  BitPat("b0000000_?????_?????__110__?????_0110011")
  val AND : BitPat =  BitPat("b0000000_?????_?????__111__?????_0110011")
}
