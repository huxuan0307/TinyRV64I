package Core.ISA.RV64I

import Core.ISA.Inst
import chisel3.util.BitPat

object InstI extends Inst {
  // InstI_LOAD
  // use imm12 and rs1
  // use rd
  //                            |---imm12----|-rs1-|func3|--rd-|-opcode-|
  val LWU   : BitPat  = BitPat("b????????????_?????__110__?????_0000011")
  val LD    : BitPat  = BitPat("b????????????_?????__011__?????_0000011")

  //                            |---imm12----|-rs1-|func3|--rd-|-opcode-|
  val ADDIW : BitPat  = BitPat("b????????????_?????__000__?????_0011011")

  // InstI_SHIFT
  // use s  hamt and rs1
  // use rd
  //                            |-func7-|shamt|-rs1-|func3|--rd-|-opcode-|
  val SLLIW : BitPat  = BitPat("b0000000_?????_?????__001__?????_0011011")
  val SRLIW : BitPat  = BitPat("b0000000_?????_?????__101__?????_0011011")
  val SRAIW : BitPat  = BitPat("b0100000_?????_?????__101__?????_0011011")


}
